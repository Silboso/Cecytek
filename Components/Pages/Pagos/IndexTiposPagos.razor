@page "/pagos/tipospagos"
@inject CecytekContext Contexto


<TituloPagina Titulo="Tipos de Pagos"></TituloPagina>

@if (ListaTipoPago?.Count > 0)
{
    <table class="table table-striped table-hover table-responsive">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Nombre del Pago</th>
                <th scope="col">Monto</th>
                <th scope="col">Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var TipoPago in ListaTipoPago)
            {
                <tr>
                    <th scope="row">@TipoPago.idtipopago</th>
                    <td>@TipoPago.nombrepago</td>
                    <td>@TipoPago.monto</td>
                    <!--Envia a la pagina "/pagos/tipospagos/editar" mas el tipo de pago-->
                    @* <td><a href="/pagos/tipospagos/editar/@TipoPago.idtipopago" class="bi bi-pen" disabled></a></td> *@
                    <td>
                        <button @onclick=sinFuncion
                                class="btn btn-outline-primary"
                                data-bs-toggle="tooltip"
                                data-bs-placement="top"
                                title="Editar">
                            <i class="bi bi-pencil"></i>
                        </button>
                        
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <MensajeSinRegistros />
}

@code {
    [Inject] ToastService ToastService { get; set; }
    [Inject] PreloadService Preload { get; set; }
    private List<TipoPago> ListaTipoPago { get; set; }



    protected override async Task OnInitializedAsync()
    {
        Preload.Show();
        try
        {
            await Task.Run(async () =>
            {
                ListaTipoPago = await Contexto.TipoPago.ToListAsync();
            });
        }
        catch (Exception ex)
        {
            await Application.Current.MainPage.DisplayAlert("Error", "No se pudieron cargar los tipos de pago", "Ok");
        }
        finally
        {
            Preload.Hide();
        }
    }

    private void sinFuncion()
    {
        ToastService.Notify(new(ToastType.Info, $"Funcion no disponible"));
    }
}
