@page "/Pagos/Consultar/{idrecibo:int}"
@inject CecytekContext Contexto

<TituloPagina Titulo="Consultar Pago"></TituloPagina>

@if (NombreTipoPago != null)
{
    <div class="container">
        <div class="row">
            <div class="col-md-12 d-flex justify-content-center">
                <div class="col-sm-12">
                    <div class="row">
                        <div class="col-sm-6 mb-2">
                            <label for="nombrealumno">Nombre del Alumno</label>
                            <InputText id="nombrealumno" class="form-control" @bind-Value="@Alumno.nombrealumno" disabled />
                        </div>
                        <div class="col-sm-6 mb-2">
                            <label for="nocontrol">No. Control</label>
                            <InputText id="nocontrol" class="form-control" @bind-Value="@Alumno.nocontrol" disabled />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6 mb-2">
                            <label for="semestre">Semestre</label>
                            <InputSelect id="semestre" class="form-control" @bind-Value="@Alumno.grado" disabled>
                                @foreach (Grados grado in Enum.GetValues(typeof(Grados)))
                                {
                                    <option value="@grado">@grado</option>
                                }
                            </InputSelect>
                        </div>
                        <div class="col-sm-6 mb-2">
                            <label for="grupo">Grupo</label>
                            <InputSelect id="grupo" class="form-control" @bind-Value="@Alumno.grupo" disabled>
                                <option value="A">A</option>
                                <option value="B">B</option>
                                <option value="C">C</option>
                                <option value="D">D</option>
                                <option value="E">E</option>
                                <option value="F">F</option>
                            </InputSelect>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6 mb-2">
                            <label for="carrera">Carrera</label>
                            <InputSelect id="carrera" class="form-control" @bind-Value="@Alumno.idcarrera" disabled>
                                @foreach (var Carrera in ListaCarreras)
                                {
                                    <option value="@Carrera.idcarrera">@Carrera.nombrecarrera</option>
                                }
                            </InputSelect>
                        </div>
                        <div class="col-sm-6 mb-2">
                            <label for="turno">Turno</label>
                            <InputSelect id="turno" class="form-control" @bind-Value="@Alumno.turno" disabled>
                                @foreach (Turnos turno in Enum.GetValues(typeof(Turnos)))
                                {
                                    <option value="@turno">@turno</option>
                                }
                            </InputSelect>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6 mb-2">
                            <label for="fechapago">Fecha de Pago</label>
                            <InputDate id="fechapago" class="form-control" @bind-Value="@Recibo.fechapago" disabled />
                        </div>
                        <div class="col-sm-6 mb-2">
                            <label for="cantidad">Monto</label>
                            <InputNumber id="cantidad" class="form-control" @bind-Value="@Recibo.cantidad" disabled />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6 mb-2">
                            <label for="idtipopago">Tipo de Pago</label>
                            <InputText id="idtipopago" class="form-control" @bind-Value="@NombreTipoPago" disabled />
                        </div>
                        <div class="col-sm-6 mb-2">
                            <label for="referencia">Referencia</label>
                            <InputText id="referencia" class="form-control" @bind-Value="@Recibo.referencia" disabled />
                        </div>
                    </div>
                    
                </div>
            </div>
        </div>
    </div>
}
else
{
    <p>Cargando...</p>
}

<div class="container">
    <div class="row">
        <div class="col-md-12 d-flex justify-content-center">
            <div class="col-sm-2">
                <div class="row">
                    <!--Boton que te regresa a la pagina anterior-->
                    <BotonVolver UrlVolver="@VolverURL"></BotonVolver>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Inject] protected PreloadService PreloadService { get; set; }
    [Parameter] public int idrecibo { get; set; }
    private Recibos Recibo { get; set; }
    private List<TipoPago> ListaTipoPagos { get; set; }
    private string NombreTipoPago { get; set; }
    private Alumnos Alumno { get; set; }
    private string VolverURL { get; set; }
    private List<Carreras> ListaCarreras { get; set; }

    protected override async Task OnInitializedAsync()
    {
        PreloadService.Show();
        await Task.Run(async () =>
        {
            Recibo = await Contexto.Recibos.Where(x => x.idrecibo == idrecibo).FirstOrDefaultAsync();
            ListaCarreras = await Contexto.Carreras.ToListAsync();
            Alumno = await Contexto.Alumnos.Where(x => x.nocontrol == Recibo.nocontrol).FirstOrDefaultAsync();
            VolverURL = $"/Alumnos/Info/{Alumno.idalumno}";
            ListaTipoPagos = await Contexto.TipoPago.ToListAsync();
            NombreTipoPago = ListaTipoPagos.Where(x => x.idtipopago == Recibo.idtipopago).Select(x => x.nombrepago).FirstOrDefault();
        });
        PreloadService.Hide();
    }
}
