@page "/Alumnos/Info/{idalumno:int}"
@inject CecytekContext Contexto

<TituloPagina Titulo="Información del Alumno"></TituloPagina>

@if (Alumno != null)
{
    <div class="container">
        <div class="row">
            <div class="col-md-12 d-flex justify-content-center">
                <div class="col-sm-12">
                    <div class="row">
                        <div class="col-sm-6 mb-2">
                            <label for="nombrealumno">Nombre del Alumno</label>
                            <InputText id="nombrealumno" class="form-control" @bind-Value="@Alumno.nombrealumno" disabled />
                        </div>
                        <div class="col-sm-6 mb-2">
                            <label for="nocontrol">No. Control</label>
                            <InputText id="nocontrol" class="form-control" @bind-Value="@Alumno.nocontrol" disabled />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6 mb-2">
                            <!--InputSelect que contiene 6 semestres-->
                            <label for="semestre">Semestre</label>
                            <InputSelect id="semestre" class="form-control" @bind-Value="@Alumno.grado" disabled>
                                @foreach (Grados grado in Enum.GetValues(typeof(Grados)))
                                {
                                    <option value="@grado">@grado</option>
                                }
                            </InputSelect>
                        </div>
                        <div class="col-sm-6 mb-2">
                            <label for="grupo">Grupo</label>
                            <InputSelect id="grupo" class="form-control" @bind-Value="@Alumno.grupo" disabled>
                                <option value="A">A</option>
                                <option value="B">B</option>
                                <option value="C">C</option>
                                <option value="D">D</option>
                                <option value="E">E</option>
                                <option value="F">F</option>
                            </InputSelect>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-4 mb-2">
                            <label for="carrera">Carrera</label>
                            <!--InputSelect que contiene las carreras-->
                            <InputSelect id="carrera" class="form-control" @bind-Value="@Alumno.idcarrera" disabled>
                                @foreach (var Carrera in ListaCarreras)
                                {
                                    <option value="@Carrera.idcarrera">@Carrera.nombrecarrera</option>
                                }
                            </InputSelect>
                        </div>
                        <div class="col-sm-4 mb-2">
                            <label for="turno">Turno</label>
                            <InputSelect id="turno" class="form-control" @bind-Value="@Alumno.turno" disabled>
                                @foreach (Turnos turno in Enum.GetValues(typeof(Turnos)))
                                {
                                    <option value="@turno">@turno</option>
                                }
                            </InputSelect>
                        </div>
                        <div class="col-sm-4 mb-2">
                            <label for="estado">Estado</label>
                            <InputSelect id="estado" class="form-control" @bind-Value="@Alumno.estado" disabled>
                                @foreach (Estado estado in Enum.GetValues(typeof(Estado)))
                                {
                                    <option value="@estado">@estado</option>
                                }
                            </InputSelect>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@if (ListaRecibos?.Count > 0)
{
    @foreach (var Recibo in ListaRecibos)
    {
        <TarjetasPagos Recibo="@Recibo" ListaTipoPagos="@ListaTipoPagos"></TarjetasPagos>
    }
}
else
{
    <div class="alert alert-secondary d-flex align-items-center" role="alert">
        <div>
            El alumno no tiene pagos registrados
        </div>
    </div>
}

@code {
    [Inject] protected PreloadService PreloadService { get; set; }
    [Inject] protected ToastService ToastService { get; set; }
    [Parameter] public int idalumno { get; set; }
    private Alumnos? Alumno { get; set; }
    private List<Carreras> ListaCarreras { get; set; }
    private List<Recibos> ListaRecibos { get; set; } 
    private List<TipoPago> ListaTipoPagos { get; set; } 

    protected override async Task OnInitializedAsync()
    {
        PreloadService.Show();
        try
        {
            await Task.Run(async () =>
            {
                ListaTipoPagos = await Contexto.TipoPago.ToListAsync();
                ListaCarreras = await Contexto.Carreras.ToListAsync();
                Alumno = await Contexto.Alumnos.FindAsync(idalumno);
                ListaRecibos = await Contexto.Recibos.Where(x => x.nocontrol == Alumno.nocontrol).ToListAsync();
            });
        }
        catch (Exception ex)
        {
            await Application.Current.MainPage.DisplayAlert("Error", "No se pudo cargar el alumno", "Ok");
        }
        finally
        {
            PreloadService.Hide();
        }
    }
}

