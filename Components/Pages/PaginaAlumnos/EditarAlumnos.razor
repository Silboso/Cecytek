@page "/Alumnos/Editar/{idalumno:int}"
@inject CecytekContext Contexto

<TituloPagina Titulo="Editar Alumno"></TituloPagina>

@if (Alumno != null)
{
    <div class="container">
        <div class="row">
            <div class="col-md-12 d-flex justify-content-center">
                <div class="col-sm-12">
                    <EditForm Model="@Alumno" OnValidSubmit="@GuardarCambios">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <div class="row">
                            <div class="col-sm-6 mb-2">
                                <label for="nombrealumno">Nombre del Alumno</label>
                                <InputText id="nombrealumno" class="form-control" @bind-Value="@Alumno.nombrealumno" />
                            </div>
                            <div class="col-sm-6 mb-2">
                                <label for="nocontrol">No. Control</label>
                                <InputText id="nocontrol" class="form-control" @bind-Value="@Alumno.nocontrol" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-6 mb-2">
                                <!--InputSelect que contiene 6 semestres-->
                                <label for="semestre">Semestre</label>
                                <InputSelect id="semestre" class="form-control" @bind-Value="@Alumno.grado">
                                    @foreach (Grados grado in Enum.GetValues(typeof(Grados)))
                                    {
                                        <option value="@grado">@grado</option>
                                    }
                                </InputSelect>
                            </div>
                            <div class="col-sm-6 mb-2">
                                <label for="grupo">Grupo</label>
                                <InputSelect id="grupo" class="form-control" @bind-Value="@Alumno.grupo">
                                    <option value="A">A</option>
                                    <option value="B">B</option>
                                    <option value="C">C</option>
                                    <option value="D">D</option>
                                    <option value="E">E</option>
                                    <option value="F">F</option>
                                </InputSelect>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-4 mb-2">
                                <label for="carrera">Carrera</label>
                                <!--InputSelect que contiene las carreras-->
                                <InputSelect id="carrera" class="form-control" @bind-Value="@Alumno.idcarrera">
                                    @foreach (var Carrera in ListaCarreras)
                                    {
                                        <option value="@Carrera.idcarrera">@Carrera.nombrecarrera</option>
                                    }
                                </InputSelect>
                            </div>
                            <div class="col-sm-4 mb-2">
                                <label for="turno">Turno</label>
                                <InputSelect id="turno" class="form-control" @bind-Value="@Alumno.turno">
                                    @foreach (Turnos turno in Enum.GetValues(typeof(Turnos)))
                                    {
                                        <option value="@turno">@turno</option>
                                    }
                                </InputSelect>
                            </div>
                            <div class="col-sm-4 mb-2">
                                <label for="estado">Estado</label>
                                <InputSelect id="estado" class="form-control" @bind-Value="@Alumno.estado">
                                    @foreach (Estado estado in Enum.GetValues(typeof(Estado)))
                                    {
                                        <option value="@estado">@estado</option>
                                    }
                                </InputSelect>
                            </div>
                        </div>
                        <div class="d-flex justify-content-center">
                            <button type="submit" class="btn btn-primary">Guardar</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <MensajeSinRegistros />
}

@code {
    [Parameter] public int idalumno { get; set; }
    [Inject] protected PreloadService PreloadService { get; set; }
    [Inject] protected ToastService ToastService { get; set; }   
    private Alumnos? Alumno { get; set; }
    private List<Carreras> ListaCarreras { get; set; }

    protected override async Task OnInitializedAsync()
    {
        PreloadService.Show();
        try
        {
            await Task.Run(async () =>
            {
                ListaCarreras = await Contexto.Carreras.ToListAsync();
                Alumno = await Contexto.Alumnos.FindAsync(idalumno);
            });
        }
        catch (Exception ex)
        {
            await Application.Current.MainPage.DisplayAlert("Error", "No se pudo cargar el alumno", "Ok");
        }
        finally
        {
            PreloadService.Hide();
        }
    }

    private async Task GuardarCambios()
    {
        PreloadService.Show();
        try
        {
            await Task.Run(async () =>
            {
                await Contexto.SaveChangesAsync();
                ToastService.Notify(new(ToastType.Success, $"Cambios guardados con exito"));
            });
        }
        catch (Exception ex)
        {
            await Application.Current.MainPage.DisplayAlert("Error", "No se pudo editar el alumno", "Ok");
        }
        finally
        {
            PreloadService.Hide();
        }
    }

}
